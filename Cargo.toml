# SPDX-FileCopyrightText: Â© 2023 Jinwoo Park (pmnxis@gmail.com)
#
# SPDX-License-Identifier: CC0-1.0

[package]
name = "billmock-app-rs"
edition = "2021"
version = "0.1.2"
authors = ["Jinwoo Park <pmnxis@gmail.com>"]
license = "MIT OR Apache-2.0"
description = "application side of billmock hardware, powered by rust-embedded"

[features]
default = ["billmock_default"]
hw_bug_host_inhibit_floating = [] # #19 bug (https://github.com/pmnxis/billmock-app-rs/issues/19)
billmock_default = ["hw_mini_0v4"] # To use rust-analzyer utilizing noDefaultFeatures on vscode
eeprom = []
hw_0v2 = ["hw_bug_host_inhibit_floating"]
hw_0v3 = ["hw_bug_host_inhibit_floating"]
hw_0v4 = ["eeprom"]
hw_mini_0v4 = ["eeprom"]

[dependencies]
embassy-sync = { version = "0.3.0", git = "https://github.com/embassy-rs/embassy.git", rev = "c0a6c78a146a6e0ec57a03e64ff83a3fa87b4bdd", features = ["defmt"] }
embassy-executor = { version = "0.3.0", git = "https://github.com/embassy-rs/embassy.git", rev = "c0a6c78a146a6e0ec57a03e64ff83a3fa87b4bdd", features = ["nightly", "arch-cortex-m", "executor-thread", "defmt", "integrated-timers"] }
embassy-futures = { version = "0.1.0", git = "https://github.com/embassy-rs/embassy.git", rev = "c0a6c78a146a6e0ec57a03e64ff83a3fa87b4bdd", features = ["defmt"] }
embassy-time = { version = "0.1.2", git = "https://github.com/embassy-rs/embassy.git", rev = "c0a6c78a146a6e0ec57a03e64ff83a3fa87b4bdd", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
embassy-stm32 = { version = "0.1.0", git = "https://github.com/embassy-rs/embassy.git", rev = "c0a6c78a146a6e0ec57a03e64ff83a3fa87b4bdd", features = ["nightly", "defmt", "time-driver-any", "stm32g030c8", "memory-x", "unstable-pac", "exti", "unstable-traits"] } # "unstable-traits" for use InputPin trait for gpio
embassy-embedded-hal = { version = "0.1.0", git = "https://github.com/embassy-rs/embassy.git", rev = "c0a6c78a146a6e0ec57a03e64ff83a3fa87b4bdd", features = ["nightly"] }
defmt = "0.3"
defmt-rtt = "0.4"

cortex-m = { version = "0.7.7", features = ["inline-asm", "critical-section-single-core"] } # 0.7.6
cortex-m-rt = "0.7.3" # 0.7.0
panic-probe = { version = "0.3", features = ["print-defmt"] }
futures = { version = "0.3.17", default-features = false, features = ["async-await"] }
static_cell = { version = "1.2", features = ["nightly"] }
num_enum = { version = "0.7.0", default-features = false } # Application specific import (only `no_std` crates alllowed)
bit_field = "0.10"
nonmax = { version = "0.5.3", default-features = false, features = [] } # to use common NonMax
static_assertions = "1.1.0"
env_to_array = { version = "0.3.1", features = ["hex"] }

# Application specific library

# card-terminal-adapter = { path = "card-terminal-adapter" }
# billmock-plug-card = { path = "serial-arcade-example" }

# The above dependency configurations are intentionally set to an external address in this repository
# for the purpose of compiling both the original and NDA code simultaneously.
# However, in reality, during a regular build, due to the patched content in `.cargo/config.toml`,
# the code accesses the locally stored directory directly without connecting to the URL.
# `billmock-plug-card` would be replaced to NDA library that working on real field with dependency injection
# details : https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html#the-patch-section

# uncoment later
card-terminal-adapter = { git = "https://github.com/pmnxis/billmock-app-rs.git", rev = "bb66a99ee2db4b4d9ac258ebe5c00c99d4a2bcc4" }
billmock-plug-card = { git = "https://github.com/pmnxis/billmock-app-rs.git", rev = "bb66a99ee2db4b4d9ac258ebe5c00c99d4a2bcc4" }

[build-dependencies]
git2 = "0.18" # Git library for Rust
cargo_metadata = "0.18"

[profile.release]
# or "z"
codegen-units = 1
debug = 2
debug-assertions = false # <-
lto = 'fat'
opt-level = "s"
overflow-checks = false # <-

[profile.dev]
# or "z"
codegen-units = 1
debug = 2
debug-assertions = true # <-
opt-level = "s"
overflow-checks = true # <-